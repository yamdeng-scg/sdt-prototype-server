<?xml version="1.0" encoding="UTF-8" ?>
<querys>
	<query id="getCurrentTimeStats">
		<![CDATA[
			SELECT 
				COUNT(1) AS ing_count, 
				SUM(
					CASE WHEN r.member_id IS NULL THEN 1 ELSE 0 end
				) AS ready_count, 
				(
					SELECT 
						COUNT(id) AS cnt 
					FROM 
						chat_message 
					WHERE 
						id = r.join_message_id 
						AND DATE_FORMAT(create_date, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d')
				) AS new_count, 
				(
					SELECT 
						COUNT(DISTINCT room_id) 
					FROM 
						room_join_history 
					WHERE 
						company_id = :companyId 
						AND DATE_FORMAT(create_date, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d')
				) AS end_count, 
				(
					SELECT 
						COUNT(DISTINCT room_id) 
					FROM 
						room_join_history 
					WHERE 
						company_id = :companyId
						AND DATE_FORMAT(create_date, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d') 
						AND (member_id IS NULL)
				) AS out_count, 
				(
					select 
						IFNULL(
							AVG(
								TIMESTAMPDIFF(MINUTE, create_date, end_date)
							), 
							0
						) 
					from 
						room_join_history 
					where 
						end_date is not null 
						AND DATE_FORMAT(end_date, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d')
				) as speak_avg_time 
			FROM 
				room r 
			WHERE 
				company_id = :companyId
				AND state < 2

		]]>
	</query>
	<query id="findReadyState">
		<![CDATA[
			SELECT 
				sub_room.*, 
				chat_message.id AS last_message_id, 
				chat_message.message AS last_message, 
				chat_message.create_date AS last_message_create_date, 
				v_customer.name AS customer_name,
				v_customer.is_block AS is_block_customer,
				v_customer.gasapp_member_number as gasapp_member_number,
				v_customer.tel_number as tel_number,
				c.name as company_name,
				TIMESTAMPDIFF(MINUTE, sub_room.join_start_date, chat_message.create_date) as speak_minute,
				(
					SELECT COUNT(1)
					FROM room_join_history rjh
					WHERE rjh.room_id = sub_room.id
						AND end_date IS NOT NULL
				) AS joinHistoryCount
			FROM 
				(
					SELECT 
						r.*, 
						IFNULL(
							(
								SELECT 
									create_date 
								FROM 
									chat_message 
								WHERE 
									id = r.join_message_id
							), 
							r.create_date
						) AS join_start_date, 
						(
							SELECT 
								MAX(id) 
							FROM 
								chat_message 
							WHERE 
								room_id = r.id
						) AS recent_message_id, 
						(
							SELECT 
								speaker2.id 
							FROM 
								room_speaker 
								INNER JOIN speaker2 ON room_speaker.speaker_id = speaker2.id 
							WHERE 
								room_id = r.id 
								AND speaker2.is_customer = 1
						) AS customer_speaker_id,
						(
							SELECT 
								COUNT(DISTINCT chat_message.id) 
							FROM 
								chat_message 
								INNER JOIN message_read ON chat_message.id = message_read.message_id 
							WHERE 
								chat_message.room_id = r.id 
								AND chat_message.is_employee = 0 
								AND message_read.speaker_id != chat_message.speaker_id 
								AND message_read.read_date IS NULL 
								AND chat_message.id > (
									SELECT 
										MAX(id) 
									FROM 
										chat_message 
									WHERE 
										is_employee = 1 
										AND room_id = r.id
								)
						) AS no_read_count, 
						(
							SELECT 
								MIN(chat_message.create_date) 
							FROM 
								chat_message 
								INNER JOIN message_read ON chat_message.id = message_read.message_id 
							WHERE 
								chat_message.room_id = r.id 
								AND chat_message.is_employee = 0 
								AND message_read.speaker_id != chat_message.speaker_id 
								AND message_read.read_date IS NULL 
								AND chat_message.id > (
									SELECT 
										MAX(id) 
									FROM 
										chat_message 
									WHERE 
										is_employee = 1 
										AND room_id = r.id
								)
						) AS wait_start_date,
						mb.name as member_name
					FROM 
						room r
						LEFT OUTER JOIN member mb ON r.last_member_id = mb.id
						           			AND mb.name LIKE concat('%', :memberName, '%')
						INNER JOIN (
							SELECT 
								DISTINCT(room_id), 
								room_id AS message_search_room_id 
							FROM 
								chat_message 
							WHERE 
								is_system_message = 0
								AND message_admin_type = 0 
								AND message LIKE concat('%', :message, '%')
						) messasge_search ON r.id = messasge_search.message_search_room_id
					WHERE 
						r.company_id = :companyId
						AND r.state < 2 
						AND r.member_id IS NULL
				) AS sub_room 
				LEFT OUTER JOIN chat_message ON sub_room.recent_message_id = chat_message.id 
				INNER JOIN v_customer ON sub_room.customer_speaker_id = v_customer.speaker_id
				INNER JOIN company c ON sub_room.company_id = c.id
			WHERE 
				v_customer.company_id = :companyId
				AND v_customer.name LIKE concat('%', :customerName, '%')
			ORDER BY :sort
		]]>
	</query>
	<query id="findIngState">
		<![CDATA[
			SELECT 
				sub_room.*, 
				chat_message.id AS last_message_id, 
				chat_message.message AS last_message, 
				chat_message.create_date AS last_message_create_date, 
				v_customer.name AS customer_name,
				v_customer.is_block AS is_block_customer,
				v_customer.gasapp_member_number as gasapp_member_number,
				v_customer.tel_number as tel_number,
				c.name as company_name,
				TIMESTAMPDIFF(MINUTE, sub_room.join_start_date, chat_message.create_date) as speak_minute,
				(
					SELECT COUNT(1)
					FROM room_join_history rjh
					WHERE rjh.room_id = sub_room.id
						AND end_date IS NOT NULL
				) AS joinHistoryCount
			FROM 
				(
					SELECT 
						r.*, 
						IFNULL(
							(
								SELECT 
									create_date 
								FROM 
									chat_message 
								WHERE 
									id = r.join_message_id
							), 
							r.create_date
						) AS join_start_date, 
						(
							SELECT 
								MAX(id) 
							FROM 
								chat_message 
							WHERE 
								room_id = r.id
						) AS recent_message_id, 
						(
							SELECT 
								speaker2.id 
							FROM 
								room_speaker 
								INNER JOIN speaker2 ON room_speaker.speaker_id = speaker2.id 
							WHERE 
								room_id = r.id 
								AND speaker2.is_customer = 1
						) AS customer_speaker_id, 
						(
							SELECT 
								COUNT(DISTINCT chat_message.id) 
							FROM 
								chat_message 
								INNER JOIN message_read ON chat_message.id = message_read.message_id 
							WHERE 
								chat_message.room_id = r.id 
								AND chat_message.is_employee = 0 
								AND message_read.speaker_id != chat_message.speaker_id 
								AND message_read.read_date IS NULL 
								AND chat_message.id > (
									SELECT 
										MAX(id) 
									FROM 
										chat_message 
									WHERE 
										is_employee = 1 
										AND room_id = r.id
								)
						) AS no_read_count, 
						(
							SELECT 
								MIN(chat_message.create_date) 
							FROM 
								chat_message 
								INNER JOIN message_read ON chat_message.id = message_read.message_id 
							WHERE 
								chat_message.room_id = r.id 
								AND chat_message.is_employee = 0 
								AND message_read.speaker_id != chat_message.speaker_id 
								AND message_read.read_date IS NULL 
								AND chat_message.id > (
									SELECT 
										MAX(id) 
									FROM 
										chat_message 
									WHERE 
										is_employee = 1 
										AND room_id = r.id
								)
						) AS wait_start_date,
						mb.name as member_name
					FROM 
						room r
						INNER JOIN member mb ON r.member_id = mb.id
						INNER JOIN (
							SELECT 
								DISTINCT(room_id), 
								room_id AS message_search_room_id 
							FROM 
								chat_message 
							WHERE 
								is_system_message = 0
								AND message_admin_type = 0 
								AND message LIKE concat('%', :message, '%')
						) messasge_search ON r.id = messasge_search.message_search_room_id
					WHERE 
						r.company_id = :companyId 
						AND r.state < 2 
						AND (
							CASE WHEN :memberId IS NULL THEN 1 = 1 ELSE member_id = :memberId END
						)
						AND mb.name LIKE concat('%', :memberName, '%')
				) AS sub_room 
				LEFT OUTER JOIN chat_message ON sub_room.recent_message_id = chat_message.id 
				INNER JOIN v_customer ON sub_room.customer_speaker_id = v_customer.speaker_id
				INNER JOIN company c ON sub_room.company_id = c.id
			WHERE 
				v_customer.company_id = :companyId
				AND v_customer.name LIKE concat('%', :customerName, '%')
			ORDER BY 
				last_message_create_date DESC
		]]>
	</query>
	<query id="findSearchCloseState">
		<![CDATA[
			SELECT 
				sub_room.*, 
				chat_message.id AS last_message_id, 
				chat_message.message AS last_message, 
				chat_message.create_date AS last_message_create_date, 
				v_customer.name AS customer_name,
				v_customer.is_block AS is_block_customer,
				v_customer.gasapp_member_number as gasapp_member_number,
				v_customer.tel_number as tel_number,
				TIMESTAMPDIFF(MINUTE, sub_room.join_start_date, chat_message.create_date) as speak_minute,
				(
					SELECT COUNT(1)
					FROM room_join_history rjh
					WHERE rjh.room_id = sub_room.id
						AND end_date IS NOT NULL
				) AS joinHistoryCount
			FROM 
				(
					SELECT 
						r.*, 
						IFNULL(
							(
								SELECT 
									create_date 
								FROM 
									chat_message 
								WHERE 
									id = r.join_message_id
							), 
							r.create_date
						) AS join_start_date, 
						(
							SELECT 
								MAX(id) 
							FROM 
								chat_message 
							WHERE 
								room_id = r.id
						) AS recent_message_id, 
						(
							SELECT 
								speaker2.id 
							FROM 
								room_speaker 
								INNER JOIN speaker2 ON room_speaker.speaker_id = speaker2.id 
							WHERE 
								room_id = r.id 
								AND speaker2.is_customer = 1
						) AS customer_speaker_id,
						mb.name as member_name
					FROM 
						room r
						INNER JOIN room_join_history rjh ON r.chatid = rjh.id
						INNER JOIN (
							SELECT 
								DISTINCT(room_id), 
								room_id AS message_search_room_id 
							FROM 
								chat_message 
							WHERE 
								is_system_message = 0
								AND message_admin_type = 0 
								AND message LIKE concat('%', :message, '%')
						) messasge_search ON r.id = messasge_search.message_search_room_id
						LEFT OUTER JOIN member mb ON rjh.member_id = mb.id
														AND mb.name LIKE concat('%', :memberName, '%')
					WHERE 
						r.company_id = :companyId 
						AND r.state = 8
						AND (
							CASE WHEN :memberId IS NULL THEN 1 = 1 ELSE rjh.member_id = :memberId END
						) 
						AND date_format(r.end_date, '%Y-%m-%d') BETWEEN :startDate 
						AND :endDate
				) AS sub_room 
				LEFT OUTER JOIN chat_message ON sub_room.recent_message_id = chat_message.id 
				INNER JOIN v_customer ON sub_room.customer_speaker_id = v_customer.speaker_id 
			WHERE 
				v_customer.company_id = :companyId
				AND v_customer.name LIKE concat('%', :customerName, '%')
			ORDER BY 
				last_message_create_date DESC
		]]>
	</query>
	<query id="findSearchJoinHistory">
		<![CDATA[
			SELECT 
				rjh.create_date AS join_start_date, 
				TIMESTAMPDIFF(
					MINUTE, rjh.create_date, rjh.end_date
				) speak_minute, 
				rjh.*, 
				mb.name AS member_name,
				mb2.name AS last_member_name,
				(SELECT GROUP_CONCAT(DISTINCT message_detail)
           FROM chat_message
        	WHERE room_id = :roomId AND id BETWEEN IFNULL(rjh.start_message_id, 0) 
              AND rjh.end_message_id) AS tags
			FROM 
				room_join_history rjh
				LEFT OUTER JOIN member mb ON mb.id = rjh.member_id 
				LEFT OUTER JOIN speaker2 sp ON mb.speaker_id = sp.id
				LEFT OUTER JOIN member mb2 ON mb2.id = rjh.last_member_id
			WHERE 
				rjh.room_id = :roomId 
				AND rjh.end_date IS NOT NULL 
				AND rjh.room_id IN(
					SELECT 
						DISTINCT room_id 
					FROM 
						chat_message 
					WHERE 
						room_id = :roomId 
						AND id BETWEEN IFNULL(rjh.start_message_id, 0) 
						AND rjh.end_message_id 
						AND is_system_message = 0 
						AND message_admin_type = 0 
						AND message LIKE CONCAT('%', :message, '%')
				) 
			ORDER BY 
				rjh.id DESC
		]]>
	</query>
	<query id="getDetail">
		<![CDATA[
			SELECT 
				sub_room.*, 
				chat_message.id AS last_message_id, 
				chat_message.message AS last_message, 
				chat_message.create_date AS last_message_create_date, 
				v_customer.name AS customer_name,
				v_customer.is_block AS is_block_customer,
				v_customer.gasapp_member_number as gasapp_member_number,
				v_customer.tel_number as tel_number,
				TIMESTAMPDIFF(MINUTE, sub_room.join_start_date, chat_message.create_date) as speak_minute,
				(
						SELECT COUNT(1)
								FROM room_join_history rjh
						WHERE rjh.room_id = sub_room.id
									AND end_date IS NOT NULL
					) AS joinHistoryCount
			FROM 
				(
					SELECT 
						r.*, 
						IFNULL(
							(
								SELECT 
									create_date 
								FROM 
									chat_message 
								WHERE 
									id = r.join_message_id
							), 
							r.create_date
						) AS join_start_date, 
						(
							SELECT 
								MAX(id) 
							FROM 
								chat_message 
							WHERE 
								room_id = r.id
						) AS recent_message_id, 
						(
							SELECT 
								speaker2.id 
							FROM 
								room_speaker 
								INNER JOIN speaker2 ON room_speaker.speaker_id = speaker2.id 
							WHERE 
								room_id = r.id 
								AND speaker2.is_customer = 1
						) AS customer_speaker_id,
						(
							SELECT 
								COUNT(DISTINCT chat_message.id) 
							FROM 
								chat_message 
								INNER JOIN message_read ON chat_message.id = message_read.message_id 
							WHERE 
								chat_message.room_id = r.id 
								AND chat_message.is_employee = 0 
								AND message_read.speaker_id != chat_message.speaker_id 
								AND message_read.read_date IS NULL 
								AND chat_message.id > (
									SELECT 
										MAX(id) 
									FROM 
										chat_message 
									WHERE 
										is_employee = 1 
										AND room_id = r.id
								)
						) AS no_read_count, 
						(
							SELECT 
								MIN(chat_message.create_date) 
							FROM 
								chat_message 
								INNER JOIN message_read ON chat_message.id = message_read.message_id 
							WHERE 
								chat_message.room_id = r.id 
								AND chat_message.is_employee = 0 
								AND message_read.speaker_id != chat_message.speaker_id 
								AND message_read.read_date IS NULL 
								AND chat_message.id > (
									SELECT 
										MAX(id) 
									FROM 
										chat_message 
									WHERE 
										is_employee = 1 
										AND room_id = r.id
								)
						) AS wait_start_date,
						mb.name as member_name
					FROM 
						room r
						LEFT OUTER JOIN member mb ON r.member_id = mb.id
					WHERE 
						r.id = :id
				) AS sub_room
				LEFT OUTER JOIN chat_message ON sub_room.recent_message_id = chat_message.id 
				INNER JOIN v_customer ON sub_room.customer_speaker_id = v_customer.speaker_id
		]]>
	</query>
	<query id="joinRoom">
		CALL join_room(:roomId, :speakerId, @readLastMessageId, @maxMessageId); SELECT @readLastMessageId, @maxMessageId;
	</query>
	<query id="closeRoom">
    CALL close_room(:roomId, :loginId) 
	</query>
	<query id="transferRoom">
    CALL transfer_room(:transferType, :roomId, :memberId, :loginId)
	</query>
	<query id="matchRoom">
    CALL match_room(:roomId, :memberId)
	</query>
	<query id="updateOnline">
    UPDATE room 
			SET    is_online = :isOnline 
			WHERE  id = :id 
	</query>
	<query id="getDetailBySpeakerId">
    SELECT *
			FROM  room 
			WHERE id = (SELECT room_id 
										FROM   room_speaker 
									WHERE speaker_id = :speakerId) 
	</query>
	<query id="updateJoinHistory">
    UPDATE room 
			SET  join_history_json = :history 
			WHERE id = :roomId
	</query>
	<query id="getRoomJoinHistoryDetail">
    SELECT *
			FROM   room_join_history 
			WHERE  id = :id
	</query>
	<query id="updateJoinHistoryByChatId">
		UPDATE room_join_history
		   SET category_small_id = :categorySmallId
		WHERE id = :chatid
	</query>
	<query id="getByGasappMemberNumber">
		<![CDATA[
      SELECT 
        r.member_id, 
        r.state AS room_state, 
        (
          SELECT 
            IFNULL(read_last_message_id, 0) 
          FROM 
            room_speaker 
          WHERE 
            room_speaker.room_id = r.id 
            AND speaker_id = sp.id
        ) AS read_last_message_id, 
        (
          SELECT 
            DATEDIFF(
              NOW(), 
              MAX(create_date)
            ) 
          FROM 
            chat_message 
          WHERE 
            room_id = r.id
        ) AS end_after_day, 
        (
          SELECT 
            COUNT(id) 
          FROM 
            chat_message 
          WHERE 
            room_id = r.id 
            AND id > read_last_message_id
            AND message_admin_type = 0
        ) AS no_read_count, 
        vc.* 
      FROM 
        v_customer vc 
        INNER JOIN room r ON vc.room_id = r.id 
        INNER JOIN speaker2 sp ON vc.speaker_id = sp.id 
      WHERE
              vc.company_id = :companyId AND vc.gasapp_member_number = :gasappMemberNumber
        ]]>
	</query>
	<query id="updpateJoinHistoryBychatId">
		UPDATE room_join_history
		   SET join_history_json = :joinHistoryJson
		 WHERE id = (SELECT chatid
		               FROM room
									WHERE id = :roomId) AND end_date IS NOT NULL
	</query>
</querys>